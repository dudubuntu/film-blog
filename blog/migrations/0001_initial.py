# Generated by Django 3.0.6 on 2020-05-19 16:25

import blog.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('text', models.TextField(blank=True)),
                ('poster', blog.fields.ThumbnailImageField(upload_to='blog/images')),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published', models.BooleanField(default=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['-add_date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=250, unique=True)),
                ('password', models.CharField(blank=True, max_length=250)),
                ('name', models.CharField(max_length=250)),
                ('last_name', models.CharField(blank=True, max_length=250)),
                ('nickname', models.CharField(blank=True, max_length=250)),
                ('age', models.PositiveIntegerField(blank=True)),
                ('can_see_profile', models.BooleanField(default=True)),
                ('avatar', blog.fields.ThumbnailImageField(upload_to='blog/avatars')),
                ('permission', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='user', to='blog.Permission')),
            ],
            options={
                'ordering': ['login'],
            },
        ),
        migrations.CreateModel(
            name='UserHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='blog.User')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('slug', models.SlugField(unique=True)),
                ('post', models.ManyToManyField(blank=True, related_name='tag', to='blog.Post')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('img', blog.fields.ThumbnailImageField(upload_to='blog/images')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='img', to='blog.Post')),
            ],
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('changed_date', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('post', models.ManyToManyField(blank=True, related_name='discussion', to='blog.Post')),
            ],
            options={
                'ordering': ['-add_date'],
            },
        ),
        migrations.CreateModel(
            name='CommentPost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.CharField(blank=True, max_length=5000)),
                ('add_date', models.DateTimeField()),
                ('changed_date', models.DateTimeField(blank=True, null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_post', to='blog.Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_post', to='blog.User')),
            ],
            options={
                'ordering': ['-add_date'],
            },
        ),
        migrations.CreateModel(
            name='CommentDiscussion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.CharField(blank=True, max_length=5000)),
                ('add_date', models.DateTimeField()),
                ('changed_date', models.DateTimeField(blank=True, null=True)),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_discussion', to='blog.Discussion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_discussion', to='blog.User')),
            ],
            options={
                'ordering': ['-add_date'],
            },
        ),
    ]
